<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on It&#39;s Ronald</title>
    <link>https://itsronald.com/categories/java/</link>
    <description>Recent content in Java on It&#39;s Ronald</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Jun 2016 19:26:34 -0700</lastBuildDate>
    
	<atom:link href="https://itsronald.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kotlin&#39;s Computed Properties Are Just Methods</title>
      <link>https://itsronald.com/blog/2016/06/kotlin-get-property-vs-method/</link>
      <pubDate>Thu, 30 Jun 2016 19:26:34 -0700</pubDate>
      
      <guid>https://itsronald.com/blog/2016/06/kotlin-get-property-vs-method/</guid>
      <description>Note: this post assumes familiarity with Java language features and conventions. RxJava familiarity is useful, but not required.
I was curious today about the relationship of Kotlin&amp;rsquo;s computed properties and methods. They do very similar things, so are they implemented similarly? (Spoiler: Yes. Yes they are.) Somehow, however, I also ended up drawing some conclusions on the semantics of reactive Observable generation. Kotlin&amp;rsquo;s computed properties can be a powerful tool for expressing your program&amp;rsquo;s intent with Observables, but you should think twice before using them for that purpose.</description>
    </item>
    
  </channel>
</rss>